Ожидаемое поведение                                                                                                                             Реальное поведение
класс Сalculation
1. расчет скидок в виде n * (100 - скидка)/100                                                                                           Скидки считаются как разница "зарплата - скидки". Это не есть правильно. Как пример, возьмем зарплату в 15 единиц и скидку в 15%, на выходе получится 0. А это по факту 100% скидка
                                                                                                                                                               если взять зарплату в 12 единиц, скидка будет 20%. по итогу покупки билета будет отрицательное значение. Чисто финансово получится что продавец нам еще и должен по факту

2. финансовая математика на числах, получающихся меньше копеек (центов и пр., тут не важно)             нет обработки никакой
и округление в большую сторону, чтобы не было расхождений с бухгалтерией и налоговой

3. обработка зависимости скидок от зарплаты, чтобы скидку сам себе не назначал покупатель                  нет ничего. сами напишем. заодно проверим чтобы зарплата была строго больше 0, иначе это уже будет не зарплата

4. в циклах опредения скидок от зарплаты множественные правильные сравнения                                    a) метод discount() при любом сравнении выведет "Скидки не будет!" потому что этот вывод вне циклов проверки, даже если скидка подразумевается
                                                                                                                                                                 b).если мы сравниваем по убыванию наименьшее сравнение должно быть первым, иначе завершится работа на первом большом сравнении, куда входят все меньшие
                                                                                                                                                                 или делать двойное сравнение. математически называется пересечение множеств, лучше чтобы его не было для неправльной трактовки

класс EmployeeCard
5. вывод карточки на экран с заданными значениями                                                                                 даже не компилируется при попытке "пробросить" что нужно.  работаем через super, в этом случае нужно добавить еще конструкторы. Один в наследуемый класс, другой в родительский
6. вывод карточки на экран с заданными значениями                                                                                 даже не компилируется. Дело в том что модификатор доступа к конструкторам не задан. если установить модификатор public то все будет работать
7. вывод карточки на экран с заданными значениями                                                                                 все компилируется, но 2 разных конструктора (они оба рабочие, кстати) с разными параметрами непересекающимися
                                                                                                                                                                  Исходя из задания и того, что во 2м конструкторе есть переменная age, а ее мы не получаем, принято решение добавить 5й параметр
                                                                                                                                                                  Во-первых, это позволит нам выполнить условие, а, во-вторых, не будет путаницы с первым конструктором. Там 4 параметра, тут будет 5
8. Сравнение с переменной isWoman, если true то пол женский, false - мужской                                         на самом деле там вместо сравнения (==) оператор присваивания (=) Т.е. Антону присвоили свойство "женский"